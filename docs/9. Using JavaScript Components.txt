========================
9.1 Creating a carousel
========================

1. 
Create a container with a class of carousel.
.carousel
<div class='carousel'>

2.
.carousel-inner - the images
<div class='carousel-inner'>

3.
.item - each image
<div class='item'><img src="../img/antigo.jpg" alt='old'></div>

4.
Carousel to automatically start we add the 
data-ride="carousel"
<div class='carousel' data-ride='carousel'>

5.
.slide - images slide
<div class='carousel slide' data-ride='carousel'>

6.
Optionally add a caption inside the carousel
.carousel-caption

<div class='carousel-caption'>
<h3>Caption Headline</h3>
<p>Caption Text: Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
</div>

7.
To add a navigation we need to give the carousel an id
<div class='carousel slide' id='featured'>

Usually the navigation goes in the bottom.
Create a anchor tag
href='#id that we define' in this case: 
href='#featured'

Then a role of button.

Data-slide - refers to a JavaScript method that will use whatever you put in here in order to control the movement of the slide. Move the carousel to the previous or to the next slide.

Add a class.
Add an icon.  
<span class='glyphicon glyphicon-chevron-right'></span>

Add indicators.
<div class='carousel-inner'>

Problems:

- If we put the pictures in a container the maximum width of that container ends up being close to 1200 pixels some pictures stays align to the left. Go up to something like 3000 to solve the problem.

- If the size of your images is slightly different, then you will see your content sort of jump up and down. Make sure that you pre-size your images. put them into Photoshop, you size them, make them all exactly the same proportions. Definitely the same height so that you do not have that problem of the images jumping around.

Carousels are meant to be wide.

Hiding the carousels when your layout is extra small. For that we have a class called hidden=xs that hide the carousel at the extra small size.
<div class='carousel slide hidden-xs' id='featured'>

===================
9.2 Creating modals
===================

Modals are a common design pattern that lets you show some content when the user pushes a button or some other HTML element.

1.
First we need a trigger, so we create a button.

data-toggle - let JavaScript know that the action that we want to perform with this particular button is going to be to activate a modal.

data-target - is going to identify which modal we want to turn on.

2.
To create the modal we are going to need a series of tags:

- 1º  
<div class='modal'>
with an id equals to the button
with a tabindex
with a role
with an aria
- 2º
<div class='modal-dialog>
with a role
- 3º
<div class='modal-content'>
- 4º
<div class='modal-header>
<h3 class='modal-title' id=''>
<button> - To close the modal
- 5º
<div class='modal-body'>
- 6º
<div class='modal-footer'>

3.
Modal have various sizes
.modal-sm
.modal-lg
<div class='modal-dialog modal-lg' role='document'>

4.
We can also add an animation of fade:
<div class='modal fade' id='policy' tabindex="-1" role='dialog' aria-labelledby='modalLabel'>

=====================================
9.3 Controllinng tabs with JavaScript
=====================================

First create a ul with a class of tab
<ul class='nav navtabs' role='tablist'>

Then create a list with a class of presentation
<li class='presentation'></li>

Inside an anchor tag because this is going to be links
<li role='presentation'><a role='tab' href="#exoticpets">Exotic Pets</a></li>

We need to add a data-toggle. Data attribute in Bootstrap, it's something that the JavaScript processor in Bootstrap needs in order to understand what to do with this information.
<a role='tab' data-toggle='tab' href="#exoticpets">Exotic Pets</a>

Now we need to place the content into divs with a class of tab-pane, a role and the id that we define above.
<div role='tab-panel' class='tab-pane active' id='exoticpets'>

Inside the div we put the content and difine the one that it's active.

===============================================
9.4 Crafting collapsible content and accordions
===============================================

Collapse - create content that appears and disappears when you click on an element. 

1.
Button that toggles a section of the page on/off

2. 
A div with a class of collapse and the content inside.

3.
Create the accordion:
div with a class of panel-group
and give a id 
<div class='panel-group' id='accordion' role='tablist' aria-multiselectable='true'>

Inside a div with a class of panel and a panel-(for color)
<div class='panel panel-default'>

Then a panel heading and a panel for content

======================
9.5 Creating a tooltip
======================

Tooltips are a really nice way to enhance some inline content.

<a href="#" data-toggle='tooltip' data-placement='top' title='Culpa nobis rerum, ab laudantium.'>

$(function() {
   $('[data-toggle="tooltip"]').tooltip();
});

====================
9.6 Adding a popover
====================

Popovers are a bit like tool tips and dropdowns. They allow you to show a pop-up overlay, and like popovers they have to be manually activated. So you can use these in either buttons or links and they're going to need different attributes depending on how they are used. 

We have to turn it manually using a script on the project.

===========================================
9.7 Controlling menus with ScrollFix/Affix
===========================================

Component called "affix" - make the navigation sticky so that it stays at the top of the screen, even when I scroll past a certain point. This will actually let me control when the navigation appears.

<nav class='navbar navbar-default' data-spy='affix' role='navigation'>

But stays behind all the content so in Css
.navbar-default {
   width: 100%;
   z-index: 100;
}

data-offset 
Amout of pixels to the navbar appears. Happens at the top and at the bottom. We can use: 
data-offset-top
data-offset-bottom

To know here we are at the navigation
scroll-spy

<body data-spy='scroll'>

data-offset='50' 
Activates as soon as is 50px from the top of the page

<body data-spy='scroll' data-target='.navbar-default' data-offset='50'>

